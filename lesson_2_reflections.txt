What happens when you initialise a repository? Why do you need to do it?
In the directory type git init and a .git directory is created with the relevant init files and directories
git status show that there are no commits and no files being tracked - any files are untracked
This is because there is no point tracking all files, just the ones that matter!

How is the staging area different from the working directory and the repository? 
Staging is about things which are ready for a commit

What value do you think it offers?
Allows time to change mind before a commit, even change the files between commits, adding and removing files.

How can you use the staging area to make sure you have one commit per logical change?
Only git add logical change set to the stage area. Check with git diff to ensure the correct bits

What are some situations when branches would be helpful in keeping your history organized? 
How would branches help?
Allows for parallel developments from the same start point. E.g. lanaguage changes, different difficulties.


git log --graph --oneline master coins
git checkout -b new-branch-name

How do the diagrams help you visualize the branch structure?
Indicate what is connected to what, and any obvious issues as a result.

git merge branch coins
git show id 
This gives changes between id and its parent

git branch -d coins
deletes coins branch

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
The changes were merged in to the 'current branch. This can include deletions.
The merged commit has two parents, the end of both branches.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
Automatic merge may be fine, especially if people are working on truly separate entities.
However,code changes in the same area may easily conflict and this will require coder input.
Merge might indicate the source of the issue though.
